{"version":3,"file":"vendor-react-dnd.js","mappings":"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","sources":["webpack://ai-tab-manager/./node_modules/react-dnd/dist/core/DndContext.js","webpack://ai-tab-manager/./node_modules/react-dnd/dist/internals/wrapConnectorHooks.js","webpack://ai-tab-manager/./node_modules/@react-dnd/shallowequal/dist/index.js","webpack://ai-tab-manager/./node_modules/react-dnd/dist/hooks/useCollectedProps.js","webpack://ai-tab-manager/./node_modules/react-dnd/dist/hooks/useMonitorOutput.js","webpack://ai-tab-manager/./node_modules/react-dnd/dist/hooks/useCollector.js","webpack://ai-tab-manager/./node_modules/react-dnd/dist/hooks/useDrop/connectors.js","webpack://ai-tab-manager/./node_modules/react-dnd/dist/internals/TargetConnector.js","webpack://ai-tab-manager/./node_modules/react-dnd/dist/internals/DropTargetMonitorImpl.js","webpack://ai-tab-manager/./node_modules/react-dnd/dist/hooks/useDrop/DropTargetImpl.js","webpack://ai-tab-manager/./node_modules/react-dnd/dist/hooks/useDrop/useDrop.js","webpack://ai-tab-manager/./node_modules/react-dnd/dist/hooks/useDrop/useDropTargetMonitor.js","webpack://ai-tab-manager/./node_modules/react-dnd/dist/hooks/useDrop/useDropTargetConnector.js","webpack://ai-tab-manager/./node_modules/react-dnd/dist/hooks/useDrop/useRegisteredDropTarget.js","webpack://ai-tab-manager/./node_modules/react-dnd/dist/hooks/useDrop/useDropTarget.js","webpack://ai-tab-manager/./node_modules/react-dnd/dist/hooks/useDrop/useAccept.js","webpack://ai-tab-manager/./node_modules/react-dnd/dist/internals/registration.js","webpack://ai-tab-manager/./node_modules/react-dnd/dist/hooks/useDragDropManager.js","webpack://ai-tab-manager/./node_modules/react-dnd/dist/hooks/useIsomorphicLayoutEffect.js","webpack://ai-tab-manager/./node_modules/react-dnd/dist/hooks/useOptionalFactory.js","webpack://ai-tab-manager/./node_modules/react-dnd/dist/core/DndProvider.js","webpack://ai-tab-manager/./node_modules/react-dnd/dist/hooks/useDrag/connectors.js","webpack://ai-tab-manager/./node_modules/react-dnd/dist/internals/SourceConnector.js","webpack://ai-tab-manager/./node_modules/react-dnd/dist/internals/DragSourceMonitorImpl.js","webpack://ai-tab-manager/./node_modules/react-dnd/dist/hooks/useDrag/DragSourceImpl.js","webpack://ai-tab-manager/./node_modules/react-dnd/dist/hooks/useDrag/useDrag.js","webpack://ai-tab-manager/./node_modules/react-dnd/dist/hooks/useDrag/useDragSourceMonitor.js","webpack://ai-tab-manager/./node_modules/react-dnd/dist/hooks/useDrag/useDragSourceConnector.js","webpack://ai-tab-manager/./node_modules/react-dnd/dist/hooks/useDrag/useRegisteredDragSource.js","webpack://ai-tab-manager/./node_modules/react-dnd/dist/hooks/useDrag/useDragSource.js","webpack://ai-tab-manager/./node_modules/react-dnd/dist/hooks/useDrag/useDragType.js","webpack://ai-tab-manager/./node_modules/react-dnd/dist/internals/isRef.js","webpack://ai-tab-manager/./node_modules/@react-dnd/asap/dist/makeRequestCall.js","webpack://ai-tab-manager/./node_modules/@react-dnd/asap/dist/RawTask.js","webpack://ai-tab-manager/./node_modules/@react-dnd/asap/dist/asap.js","webpack://ai-tab-manager/./node_modules/@react-dnd/asap/dist/AsapQueue.js","webpack://ai-tab-manager/./node_modules/@react-dnd/asap/dist/TaskFactory.js","webpack://ai-tab-manager/./node_modules/@react-dnd/invariant/dist/index.js"],"sourcesContent":["import { createContext } from 'react';\n/**\n * Create the React Context\n */ export const DndContext = createContext({\n    dragDropManager: undefined\n});\n\n//# sourceMappingURL=DndContext.js.map","import { invariant } from '@react-dnd/invariant';\nimport { cloneElement, isValidElement } from 'react';\nfunction throwIfCompositeComponentElement(element) {\n    // Custom components can no longer be wrapped directly in React DnD 2.0\n    // so that we don't need to depend on findDOMNode() from react-dom.\n    if (typeof element.type === 'string') {\n        return;\n    }\n    const displayName = element.type.displayName || element.type.name || 'the component';\n    throw new Error('Only native element nodes can now be passed to React DnD connectors.' + `You can either wrap ${displayName} into a <div>, or turn it into a ` + 'drag source or a drop target itself.');\n}\nfunction wrapHookToRecognizeElement(hook) {\n    return (elementOrNode = null, options = null)=>{\n        // When passed a node, call the hook straight away.\n        if (!isValidElement(elementOrNode)) {\n            const node = elementOrNode;\n            hook(node, options);\n            // return the node so it can be chained (e.g. when within callback refs\n            // <div ref={node => connectDragSource(connectDropTarget(node))}/>\n            return node;\n        }\n        // If passed a ReactElement, clone it and attach this function as a ref.\n        // This helps us achieve a neat API where user doesn't even know that refs\n        // are being used under the hood.\n        const element = elementOrNode;\n        throwIfCompositeComponentElement(element);\n        // When no options are passed, use the hook directly\n        const ref = options ? (node)=>hook(node, options)\n         : hook;\n        return cloneWithRef(element, ref);\n    };\n}\nexport function wrapConnectorHooks(hooks) {\n    const wrappedHooks = {};\n    Object.keys(hooks).forEach((key)=>{\n        const hook = hooks[key];\n        // ref objects should be passed straight through without wrapping\n        if (key.endsWith('Ref')) {\n            wrappedHooks[key] = hooks[key];\n        } else {\n            const wrappedHook = wrapHookToRecognizeElement(hook);\n            wrappedHooks[key] = ()=>wrappedHook\n            ;\n        }\n    });\n    return wrappedHooks;\n}\nfunction setRef(ref, node) {\n    if (typeof ref === 'function') {\n        ref(node);\n    } else {\n        ref.current = node;\n    }\n}\nfunction cloneWithRef(element, newRef) {\n    const previousRef = element.ref;\n    invariant(typeof previousRef !== 'string', 'Cannot connect React DnD to an element with an existing string ref. ' + 'Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. ' + 'Read more: https://reactjs.org/docs/refs-and-the-dom.html#callback-refs');\n    if (!previousRef) {\n        // When there is no ref on the element, use the new ref directly\n        return cloneElement(element, {\n            ref: newRef\n        });\n    } else {\n        return cloneElement(element, {\n            ref: (node)=>{\n                setRef(previousRef, node);\n                setRef(newRef, node);\n            }\n        });\n    }\n}\n\n//# sourceMappingURL=wrapConnectorHooks.js.map","export function shallowEqual(objA, objB, compare, compareContext) {\n    let compareResult = compare ? compare.call(compareContext, objA, objB) : void 0;\n    if (compareResult !== void 0) {\n        return !!compareResult;\n    }\n    if (objA === objB) {\n        return true;\n    }\n    if (typeof objA !== 'object' || !objA || typeof objB !== 'object' || !objB) {\n        return false;\n    }\n    const keysA = Object.keys(objA);\n    const keysB = Object.keys(objB);\n    if (keysA.length !== keysB.length) {\n        return false;\n    }\n    const bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n    // Test for A's keys different from B.\n    for(let idx = 0; idx < keysA.length; idx++){\n        const key = keysA[idx];\n        if (!bHasOwnProperty(key)) {\n            return false;\n        }\n        const valueA = objA[key];\n        const valueB = objB[key];\n        compareResult = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n        if (compareResult === false || compareResult === void 0 && valueA !== valueB) {\n            return false;\n        }\n    }\n    return true;\n}\n\n//# sourceMappingURL=index.js.map","import { useMonitorOutput } from './useMonitorOutput.js';\nexport function useCollectedProps(collector, monitor, connector) {\n    return useMonitorOutput(monitor, collector || (()=>({})\n    ), ()=>connector.reconnect()\n    );\n}\n\n//# sourceMappingURL=useCollectedProps.js.map","import { useCollector } from './useCollector.js';\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect.js';\nexport function useMonitorOutput(monitor, collect, onCollect) {\n    const [collected, updateCollected] = useCollector(monitor, collect, onCollect);\n    useIsomorphicLayoutEffect(function subscribeToMonitorStateChange() {\n        const handlerId = monitor.getHandlerId();\n        if (handlerId == null) {\n            return;\n        }\n        return monitor.subscribeToStateChange(updateCollected, {\n            handlerIds: [\n                handlerId\n            ]\n        });\n    }, [\n        monitor,\n        updateCollected\n    ]);\n    return collected;\n}\n\n//# sourceMappingURL=useMonitorOutput.js.map","import equal from 'fast-deep-equal';\nimport { useCallback, useState } from 'react';\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect.js';\n/**\n *\n * @param monitor The monitor to collect state from\n * @param collect The collecting function\n * @param onUpdate A method to invoke when updates occur\n */ export function useCollector(monitor, collect, onUpdate) {\n    const [collected, setCollected] = useState(()=>collect(monitor)\n    );\n    const updateCollected = useCallback(()=>{\n        const nextValue = collect(monitor);\n        // This needs to be a deep-equality check because some monitor-collected values\n        // include XYCoord objects that may be equivalent, but do not have instance equality.\n        if (!equal(collected, nextValue)) {\n            setCollected(nextValue);\n            if (onUpdate) {\n                onUpdate();\n            }\n        }\n    }, [\n        collected,\n        monitor,\n        onUpdate\n    ]);\n    // update the collected properties after react renders.\n    // Note that the \"Dustbin Stress Test\" fails if this is not\n    // done when the component updates\n    useIsomorphicLayoutEffect(updateCollected);\n    return [\n        collected,\n        updateCollected\n    ];\n}\n\n//# sourceMappingURL=useCollector.js.map","import { useMemo } from 'react';\nexport function useConnectDropTarget(connector) {\n    return useMemo(()=>connector.hooks.dropTarget()\n    , [\n        connector\n    ]);\n}\n\n//# sourceMappingURL=connectors.js.map","import { shallowEqual } from '@react-dnd/shallowequal';\nimport { isRef } from './isRef.js';\nimport { wrapConnectorHooks } from './wrapConnectorHooks.js';\nexport class TargetConnector {\n    get connectTarget() {\n        return this.dropTarget;\n    }\n    reconnect() {\n        // if nothing has changed then don't resubscribe\n        const didChange = this.didHandlerIdChange() || this.didDropTargetChange() || this.didOptionsChange();\n        if (didChange) {\n            this.disconnectDropTarget();\n        }\n        const dropTarget = this.dropTarget;\n        if (!this.handlerId) {\n            return;\n        }\n        if (!dropTarget) {\n            this.lastConnectedDropTarget = dropTarget;\n            return;\n        }\n        if (didChange) {\n            this.lastConnectedHandlerId = this.handlerId;\n            this.lastConnectedDropTarget = dropTarget;\n            this.lastConnectedDropTargetOptions = this.dropTargetOptions;\n            this.unsubscribeDropTarget = this.backend.connectDropTarget(this.handlerId, dropTarget, this.dropTargetOptions);\n        }\n    }\n    receiveHandlerId(newHandlerId) {\n        if (newHandlerId === this.handlerId) {\n            return;\n        }\n        this.handlerId = newHandlerId;\n        this.reconnect();\n    }\n    get dropTargetOptions() {\n        return this.dropTargetOptionsInternal;\n    }\n    set dropTargetOptions(options) {\n        this.dropTargetOptionsInternal = options;\n    }\n    didHandlerIdChange() {\n        return this.lastConnectedHandlerId !== this.handlerId;\n    }\n    didDropTargetChange() {\n        return this.lastConnectedDropTarget !== this.dropTarget;\n    }\n    didOptionsChange() {\n        return !shallowEqual(this.lastConnectedDropTargetOptions, this.dropTargetOptions);\n    }\n    disconnectDropTarget() {\n        if (this.unsubscribeDropTarget) {\n            this.unsubscribeDropTarget();\n            this.unsubscribeDropTarget = undefined;\n        }\n    }\n    get dropTarget() {\n        return this.dropTargetNode || this.dropTargetRef && this.dropTargetRef.current;\n    }\n    clearDropTarget() {\n        this.dropTargetRef = null;\n        this.dropTargetNode = null;\n    }\n    constructor(backend){\n        this.hooks = wrapConnectorHooks({\n            dropTarget: (node, options)=>{\n                this.clearDropTarget();\n                this.dropTargetOptions = options;\n                if (isRef(node)) {\n                    this.dropTargetRef = node;\n                } else {\n                    this.dropTargetNode = node;\n                }\n                this.reconnect();\n            }\n        });\n        this.handlerId = null;\n        // The drop target may either be attached via ref or connect function\n        this.dropTargetRef = null;\n        this.dropTargetOptionsInternal = null;\n        this.lastConnectedHandlerId = null;\n        this.lastConnectedDropTarget = null;\n        this.lastConnectedDropTargetOptions = null;\n        this.backend = backend;\n    }\n}\n\n//# sourceMappingURL=TargetConnector.js.map","import { invariant } from '@react-dnd/invariant';\nlet isCallingCanDrop = false;\nexport class DropTargetMonitorImpl {\n    receiveHandlerId(targetId) {\n        this.targetId = targetId;\n    }\n    getHandlerId() {\n        return this.targetId;\n    }\n    subscribeToStateChange(listener, options) {\n        return this.internalMonitor.subscribeToStateChange(listener, options);\n    }\n    canDrop() {\n        // Cut out early if the target id has not been set. This should prevent errors\n        // where the user has an older version of dnd-core like in\n        // https://github.com/react-dnd/react-dnd/issues/1310\n        if (!this.targetId) {\n            return false;\n        }\n        invariant(!isCallingCanDrop, 'You may not call monitor.canDrop() inside your canDrop() implementation. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor');\n        try {\n            isCallingCanDrop = true;\n            return this.internalMonitor.canDropOnTarget(this.targetId);\n        } finally{\n            isCallingCanDrop = false;\n        }\n    }\n    isOver(options) {\n        if (!this.targetId) {\n            return false;\n        }\n        return this.internalMonitor.isOverTarget(this.targetId, options);\n    }\n    getItemType() {\n        return this.internalMonitor.getItemType();\n    }\n    getItem() {\n        return this.internalMonitor.getItem();\n    }\n    getDropResult() {\n        return this.internalMonitor.getDropResult();\n    }\n    didDrop() {\n        return this.internalMonitor.didDrop();\n    }\n    getInitialClientOffset() {\n        return this.internalMonitor.getInitialClientOffset();\n    }\n    getInitialSourceClientOffset() {\n        return this.internalMonitor.getInitialSourceClientOffset();\n    }\n    getSourceClientOffset() {\n        return this.internalMonitor.getSourceClientOffset();\n    }\n    getClientOffset() {\n        return this.internalMonitor.getClientOffset();\n    }\n    getDifferenceFromInitialOffset() {\n        return this.internalMonitor.getDifferenceFromInitialOffset();\n    }\n    constructor(manager){\n        this.targetId = null;\n        this.internalMonitor = manager.getMonitor();\n    }\n}\n\n//# sourceMappingURL=DropTargetMonitorImpl.js.map","export class DropTargetImpl {\n    canDrop() {\n        const spec = this.spec;\n        const monitor = this.monitor;\n        return spec.canDrop ? spec.canDrop(monitor.getItem(), monitor) : true;\n    }\n    hover() {\n        const spec = this.spec;\n        const monitor = this.monitor;\n        if (spec.hover) {\n            spec.hover(monitor.getItem(), monitor);\n        }\n    }\n    drop() {\n        const spec = this.spec;\n        const monitor = this.monitor;\n        if (spec.drop) {\n            return spec.drop(monitor.getItem(), monitor);\n        }\n        return;\n    }\n    constructor(spec, monitor){\n        this.spec = spec;\n        this.monitor = monitor;\n    }\n}\n\n//# sourceMappingURL=DropTargetImpl.js.map","import { useCollectedProps } from '../useCollectedProps.js';\nimport { useOptionalFactory } from '../useOptionalFactory.js';\nimport { useConnectDropTarget } from './connectors.js';\nimport { useDropTargetConnector } from './useDropTargetConnector.js';\nimport { useDropTargetMonitor } from './useDropTargetMonitor.js';\nimport { useRegisteredDropTarget } from './useRegisteredDropTarget.js';\n/**\n * useDropTarget Hook\n * @param spec The drop target specification (object or function, function preferred)\n * @param deps The memoization deps array to use when evaluating spec changes\n */ export function useDrop(specArg, deps) {\n    const spec = useOptionalFactory(specArg, deps);\n    const monitor = useDropTargetMonitor();\n    const connector = useDropTargetConnector(spec.options);\n    useRegisteredDropTarget(spec, monitor, connector);\n    return [\n        useCollectedProps(spec.collect, monitor, connector),\n        useConnectDropTarget(connector), \n    ];\n}\n\n//# sourceMappingURL=useDrop.js.map","import { useMemo } from 'react';\nimport { DropTargetMonitorImpl } from '../../internals/index.js';\nimport { useDragDropManager } from '../useDragDropManager.js';\nexport function useDropTargetMonitor() {\n    const manager = useDragDropManager();\n    return useMemo(()=>new DropTargetMonitorImpl(manager)\n    , [\n        manager\n    ]);\n}\n\n//# sourceMappingURL=useDropTargetMonitor.js.map","import { useMemo } from 'react';\nimport { TargetConnector } from '../../internals/index.js';\nimport { useDragDropManager } from '../useDragDropManager.js';\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js';\nexport function useDropTargetConnector(options) {\n    const manager = useDragDropManager();\n    const connector = useMemo(()=>new TargetConnector(manager.getBackend())\n    , [\n        manager\n    ]);\n    useIsomorphicLayoutEffect(()=>{\n        connector.dropTargetOptions = options || null;\n        connector.reconnect();\n        return ()=>connector.disconnectDropTarget()\n        ;\n    }, [\n        options\n    ]);\n    return connector;\n}\n\n//# sourceMappingURL=useDropTargetConnector.js.map","import { registerTarget } from '../../internals/index.js';\nimport { useDragDropManager } from '../useDragDropManager.js';\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js';\nimport { useAccept } from './useAccept.js';\nimport { useDropTarget } from './useDropTarget.js';\nexport function useRegisteredDropTarget(spec, monitor, connector) {\n    const manager = useDragDropManager();\n    const dropTarget = useDropTarget(spec, monitor);\n    const accept = useAccept(spec);\n    useIsomorphicLayoutEffect(function registerDropTarget() {\n        const [handlerId, unregister] = registerTarget(accept, dropTarget, manager);\n        monitor.receiveHandlerId(handlerId);\n        connector.receiveHandlerId(handlerId);\n        return unregister;\n    }, [\n        manager,\n        monitor,\n        dropTarget,\n        connector,\n        accept.map((a)=>a.toString()\n        ).join('|'), \n    ]);\n}\n\n//# sourceMappingURL=useRegisteredDropTarget.js.map","import { useEffect, useMemo } from 'react';\nimport { DropTargetImpl } from './DropTargetImpl.js';\nexport function useDropTarget(spec, monitor) {\n    const dropTarget = useMemo(()=>new DropTargetImpl(spec, monitor)\n    , [\n        monitor\n    ]);\n    useEffect(()=>{\n        dropTarget.spec = spec;\n    }, [\n        spec\n    ]);\n    return dropTarget;\n}\n\n//# sourceMappingURL=useDropTarget.js.map","import { invariant } from '@react-dnd/invariant';\nimport { useMemo } from 'react';\n/**\n * Internal utility hook to get an array-version of spec.accept.\n * The main utility here is that we aren't creating a new array on every render if a non-array spec.accept is passed in.\n * @param spec\n */ export function useAccept(spec) {\n    const { accept  } = spec;\n    return useMemo(()=>{\n        invariant(spec.accept != null, 'accept must be defined');\n        return Array.isArray(accept) ? accept : [\n            accept\n        ];\n    }, [\n        accept\n    ]);\n}\n\n//# sourceMappingURL=useAccept.js.map","export function registerTarget(type, target, manager) {\n    const registry = manager.getRegistry();\n    const targetId = registry.addTarget(type, target);\n    return [\n        targetId,\n        ()=>registry.removeTarget(targetId)\n    ];\n}\nexport function registerSource(type, source, manager) {\n    const registry = manager.getRegistry();\n    const sourceId = registry.addSource(type, source);\n    return [\n        sourceId,\n        ()=>registry.removeSource(sourceId)\n    ];\n}\n\n//# sourceMappingURL=registration.js.map","import { invariant } from '@react-dnd/invariant';\nimport { useContext } from 'react';\nimport { DndContext } from '../core/index.js';\n/**\n * A hook to retrieve the DragDropManager from Context\n */ export function useDragDropManager() {\n    const { dragDropManager  } = useContext(DndContext);\n    invariant(dragDropManager != null, 'Expected drag drop context');\n    return dragDropManager;\n}\n\n//# sourceMappingURL=useDragDropManager.js.map","import { useEffect, useLayoutEffect } from 'react';\n// suppress the useLayoutEffect warning on server side.\nexport const useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect;\n\n//# sourceMappingURL=useIsomorphicLayoutEffect.js.map","import { useMemo } from 'react';\nexport function useOptionalFactory(arg, deps) {\n    const memoDeps = [\n        ...deps || []\n    ];\n    if (deps == null && typeof arg !== 'function') {\n        memoDeps.push(arg);\n    }\n    return useMemo(()=>{\n        return typeof arg === 'function' ? arg() : arg;\n    }, memoDeps);\n}\n\n//# sourceMappingURL=useOptionalFactory.js.map","function _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n        for(i = 0; i < sourceSymbolKeys.length; i++){\n            key = sourceSymbolKeys[i];\n            if (excluded.indexOf(key) >= 0) continue;\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createDragDropManager } from 'dnd-core';\nimport { memo, useEffect } from 'react';\nimport { DndContext } from './DndContext.js';\nlet refCount = 0;\nconst INSTANCE_SYM = Symbol.for('__REACT_DND_CONTEXT_INSTANCE__');\nvar DndProvider = /*#__PURE__*/ memo(function DndProvider(_param) {\n    var { children  } = _param, props = _objectWithoutProperties(_param, [\n        \"children\"\n    ]);\n    const [manager, isGlobalInstance] = getDndContextValue(props) // memoized from props\n    ;\n    /**\n\t\t * If the global context was used to store the DND context\n\t\t * then where theres no more references to it we should\n\t\t * clean it up to avoid memory leaks\n\t\t */ useEffect(()=>{\n        if (isGlobalInstance) {\n            const context = getGlobalContext();\n            ++refCount;\n            return ()=>{\n                if (--refCount === 0) {\n                    context[INSTANCE_SYM] = null;\n                }\n            };\n        }\n        return;\n    }, []);\n    return /*#__PURE__*/ _jsx(DndContext.Provider, {\n        value: manager,\n        children: children\n    });\n});\n/**\n * A React component that provides the React-DnD context\n */ export { DndProvider,  };\nfunction getDndContextValue(props) {\n    if ('manager' in props) {\n        const manager = {\n            dragDropManager: props.manager\n        };\n        return [\n            manager,\n            false\n        ];\n    }\n    const manager = createSingletonDndContext(props.backend, props.context, props.options, props.debugMode);\n    const isGlobalInstance = !props.context;\n    return [\n        manager,\n        isGlobalInstance\n    ];\n}\nfunction createSingletonDndContext(backend, context = getGlobalContext(), options, debugMode) {\n    const ctx = context;\n    if (!ctx[INSTANCE_SYM]) {\n        ctx[INSTANCE_SYM] = {\n            dragDropManager: createDragDropManager(backend, context, options, debugMode)\n        };\n    }\n    return ctx[INSTANCE_SYM];\n}\nfunction getGlobalContext() {\n    return typeof global !== 'undefined' ? global : window;\n}\n\n//# sourceMappingURL=DndProvider.js.map","import { useMemo } from 'react';\nexport function useConnectDragSource(connector) {\n    return useMemo(()=>connector.hooks.dragSource()\n    , [\n        connector\n    ]);\n}\nexport function useConnectDragPreview(connector) {\n    return useMemo(()=>connector.hooks.dragPreview()\n    , [\n        connector\n    ]);\n}\n\n//# sourceMappingURL=connectors.js.map","import { shallowEqual } from '@react-dnd/shallowequal';\nimport { isRef } from './isRef.js';\nimport { wrapConnectorHooks } from './wrapConnectorHooks.js';\nexport class SourceConnector {\n    receiveHandlerId(newHandlerId) {\n        if (this.handlerId === newHandlerId) {\n            return;\n        }\n        this.handlerId = newHandlerId;\n        this.reconnect();\n    }\n    get connectTarget() {\n        return this.dragSource;\n    }\n    get dragSourceOptions() {\n        return this.dragSourceOptionsInternal;\n    }\n    set dragSourceOptions(options) {\n        this.dragSourceOptionsInternal = options;\n    }\n    get dragPreviewOptions() {\n        return this.dragPreviewOptionsInternal;\n    }\n    set dragPreviewOptions(options) {\n        this.dragPreviewOptionsInternal = options;\n    }\n    reconnect() {\n        const didChange = this.reconnectDragSource();\n        this.reconnectDragPreview(didChange);\n    }\n    reconnectDragSource() {\n        const dragSource = this.dragSource;\n        // if nothing has changed then don't resubscribe\n        const didChange = this.didHandlerIdChange() || this.didConnectedDragSourceChange() || this.didDragSourceOptionsChange();\n        if (didChange) {\n            this.disconnectDragSource();\n        }\n        if (!this.handlerId) {\n            return didChange;\n        }\n        if (!dragSource) {\n            this.lastConnectedDragSource = dragSource;\n            return didChange;\n        }\n        if (didChange) {\n            this.lastConnectedHandlerId = this.handlerId;\n            this.lastConnectedDragSource = dragSource;\n            this.lastConnectedDragSourceOptions = this.dragSourceOptions;\n            this.dragSourceUnsubscribe = this.backend.connectDragSource(this.handlerId, dragSource, this.dragSourceOptions);\n        }\n        return didChange;\n    }\n    reconnectDragPreview(forceDidChange = false) {\n        const dragPreview = this.dragPreview;\n        // if nothing has changed then don't resubscribe\n        const didChange = forceDidChange || this.didHandlerIdChange() || this.didConnectedDragPreviewChange() || this.didDragPreviewOptionsChange();\n        if (didChange) {\n            this.disconnectDragPreview();\n        }\n        if (!this.handlerId) {\n            return;\n        }\n        if (!dragPreview) {\n            this.lastConnectedDragPreview = dragPreview;\n            return;\n        }\n        if (didChange) {\n            this.lastConnectedHandlerId = this.handlerId;\n            this.lastConnectedDragPreview = dragPreview;\n            this.lastConnectedDragPreviewOptions = this.dragPreviewOptions;\n            this.dragPreviewUnsubscribe = this.backend.connectDragPreview(this.handlerId, dragPreview, this.dragPreviewOptions);\n        }\n    }\n    didHandlerIdChange() {\n        return this.lastConnectedHandlerId !== this.handlerId;\n    }\n    didConnectedDragSourceChange() {\n        return this.lastConnectedDragSource !== this.dragSource;\n    }\n    didConnectedDragPreviewChange() {\n        return this.lastConnectedDragPreview !== this.dragPreview;\n    }\n    didDragSourceOptionsChange() {\n        return !shallowEqual(this.lastConnectedDragSourceOptions, this.dragSourceOptions);\n    }\n    didDragPreviewOptionsChange() {\n        return !shallowEqual(this.lastConnectedDragPreviewOptions, this.dragPreviewOptions);\n    }\n    disconnectDragSource() {\n        if (this.dragSourceUnsubscribe) {\n            this.dragSourceUnsubscribe();\n            this.dragSourceUnsubscribe = undefined;\n        }\n    }\n    disconnectDragPreview() {\n        if (this.dragPreviewUnsubscribe) {\n            this.dragPreviewUnsubscribe();\n            this.dragPreviewUnsubscribe = undefined;\n            this.dragPreviewNode = null;\n            this.dragPreviewRef = null;\n        }\n    }\n    get dragSource() {\n        return this.dragSourceNode || this.dragSourceRef && this.dragSourceRef.current;\n    }\n    get dragPreview() {\n        return this.dragPreviewNode || this.dragPreviewRef && this.dragPreviewRef.current;\n    }\n    clearDragSource() {\n        this.dragSourceNode = null;\n        this.dragSourceRef = null;\n    }\n    clearDragPreview() {\n        this.dragPreviewNode = null;\n        this.dragPreviewRef = null;\n    }\n    constructor(backend){\n        this.hooks = wrapConnectorHooks({\n            dragSource: (node, options)=>{\n                this.clearDragSource();\n                this.dragSourceOptions = options || null;\n                if (isRef(node)) {\n                    this.dragSourceRef = node;\n                } else {\n                    this.dragSourceNode = node;\n                }\n                this.reconnectDragSource();\n            },\n            dragPreview: (node, options)=>{\n                this.clearDragPreview();\n                this.dragPreviewOptions = options || null;\n                if (isRef(node)) {\n                    this.dragPreviewRef = node;\n                } else {\n                    this.dragPreviewNode = node;\n                }\n                this.reconnectDragPreview();\n            }\n        });\n        this.handlerId = null;\n        // The drop target may either be attached via ref or connect function\n        this.dragSourceRef = null;\n        this.dragSourceOptionsInternal = null;\n        // The drag preview may either be attached via ref or connect function\n        this.dragPreviewRef = null;\n        this.dragPreviewOptionsInternal = null;\n        this.lastConnectedHandlerId = null;\n        this.lastConnectedDragSource = null;\n        this.lastConnectedDragSourceOptions = null;\n        this.lastConnectedDragPreview = null;\n        this.lastConnectedDragPreviewOptions = null;\n        this.backend = backend;\n    }\n}\n\n//# sourceMappingURL=SourceConnector.js.map","import { invariant } from '@react-dnd/invariant';\nlet isCallingCanDrag = false;\nlet isCallingIsDragging = false;\nexport class DragSourceMonitorImpl {\n    receiveHandlerId(sourceId) {\n        this.sourceId = sourceId;\n    }\n    getHandlerId() {\n        return this.sourceId;\n    }\n    canDrag() {\n        invariant(!isCallingCanDrag, 'You may not call monitor.canDrag() inside your canDrag() implementation. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor');\n        try {\n            isCallingCanDrag = true;\n            return this.internalMonitor.canDragSource(this.sourceId);\n        } finally{\n            isCallingCanDrag = false;\n        }\n    }\n    isDragging() {\n        if (!this.sourceId) {\n            return false;\n        }\n        invariant(!isCallingIsDragging, 'You may not call monitor.isDragging() inside your isDragging() implementation. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor');\n        try {\n            isCallingIsDragging = true;\n            return this.internalMonitor.isDraggingSource(this.sourceId);\n        } finally{\n            isCallingIsDragging = false;\n        }\n    }\n    subscribeToStateChange(listener, options) {\n        return this.internalMonitor.subscribeToStateChange(listener, options);\n    }\n    isDraggingSource(sourceId) {\n        return this.internalMonitor.isDraggingSource(sourceId);\n    }\n    isOverTarget(targetId, options) {\n        return this.internalMonitor.isOverTarget(targetId, options);\n    }\n    getTargetIds() {\n        return this.internalMonitor.getTargetIds();\n    }\n    isSourcePublic() {\n        return this.internalMonitor.isSourcePublic();\n    }\n    getSourceId() {\n        return this.internalMonitor.getSourceId();\n    }\n    subscribeToOffsetChange(listener) {\n        return this.internalMonitor.subscribeToOffsetChange(listener);\n    }\n    canDragSource(sourceId) {\n        return this.internalMonitor.canDragSource(sourceId);\n    }\n    canDropOnTarget(targetId) {\n        return this.internalMonitor.canDropOnTarget(targetId);\n    }\n    getItemType() {\n        return this.internalMonitor.getItemType();\n    }\n    getItem() {\n        return this.internalMonitor.getItem();\n    }\n    getDropResult() {\n        return this.internalMonitor.getDropResult();\n    }\n    didDrop() {\n        return this.internalMonitor.didDrop();\n    }\n    getInitialClientOffset() {\n        return this.internalMonitor.getInitialClientOffset();\n    }\n    getInitialSourceClientOffset() {\n        return this.internalMonitor.getInitialSourceClientOffset();\n    }\n    getSourceClientOffset() {\n        return this.internalMonitor.getSourceClientOffset();\n    }\n    getClientOffset() {\n        return this.internalMonitor.getClientOffset();\n    }\n    getDifferenceFromInitialOffset() {\n        return this.internalMonitor.getDifferenceFromInitialOffset();\n    }\n    constructor(manager){\n        this.sourceId = null;\n        this.internalMonitor = manager.getMonitor();\n    }\n}\n\n//# sourceMappingURL=DragSourceMonitorImpl.js.map","export class DragSourceImpl {\n    beginDrag() {\n        const spec = this.spec;\n        const monitor = this.monitor;\n        let result = null;\n        if (typeof spec.item === 'object') {\n            result = spec.item;\n        } else if (typeof spec.item === 'function') {\n            result = spec.item(monitor);\n        } else {\n            result = {};\n        }\n        return result !== null && result !== void 0 ? result : null;\n    }\n    canDrag() {\n        const spec = this.spec;\n        const monitor = this.monitor;\n        if (typeof spec.canDrag === 'boolean') {\n            return spec.canDrag;\n        } else if (typeof spec.canDrag === 'function') {\n            return spec.canDrag(monitor);\n        } else {\n            return true;\n        }\n    }\n    isDragging(globalMonitor, target) {\n        const spec = this.spec;\n        const monitor = this.monitor;\n        const { isDragging  } = spec;\n        return isDragging ? isDragging(monitor) : target === globalMonitor.getSourceId();\n    }\n    endDrag() {\n        const spec = this.spec;\n        const monitor = this.monitor;\n        const connector = this.connector;\n        const { end  } = spec;\n        if (end) {\n            end(monitor.getItem(), monitor);\n        }\n        connector.reconnect();\n    }\n    constructor(spec, monitor, connector){\n        this.spec = spec;\n        this.monitor = monitor;\n        this.connector = connector;\n    }\n}\n\n//# sourceMappingURL=DragSourceImpl.js.map","import { invariant } from '@react-dnd/invariant';\nimport { useCollectedProps } from '../useCollectedProps.js';\nimport { useOptionalFactory } from '../useOptionalFactory.js';\nimport { useConnectDragPreview, useConnectDragSource } from './connectors.js';\nimport { useDragSourceConnector } from './useDragSourceConnector.js';\nimport { useDragSourceMonitor } from './useDragSourceMonitor.js';\nimport { useRegisteredDragSource } from './useRegisteredDragSource.js';\n/**\n * useDragSource hook\n * @param sourceSpec The drag source specification (object or function, function preferred)\n * @param deps The memoization deps array to use when evaluating spec changes\n */ export function useDrag(specArg, deps) {\n    const spec = useOptionalFactory(specArg, deps);\n    invariant(!spec.begin, `useDrag::spec.begin was deprecated in v14. Replace spec.begin() with spec.item(). (see more here - https://react-dnd.github.io/react-dnd/docs/api/use-drag)`);\n    const monitor = useDragSourceMonitor();\n    const connector = useDragSourceConnector(spec.options, spec.previewOptions);\n    useRegisteredDragSource(spec, monitor, connector);\n    return [\n        useCollectedProps(spec.collect, monitor, connector),\n        useConnectDragSource(connector),\n        useConnectDragPreview(connector), \n    ];\n}\n\n//# sourceMappingURL=useDrag.js.map","import { useMemo } from 'react';\nimport { DragSourceMonitorImpl } from '../../internals/index.js';\nimport { useDragDropManager } from '../useDragDropManager.js';\nexport function useDragSourceMonitor() {\n    const manager = useDragDropManager();\n    return useMemo(()=>new DragSourceMonitorImpl(manager)\n    , [\n        manager\n    ]);\n}\n\n//# sourceMappingURL=useDragSourceMonitor.js.map","import { useMemo } from 'react';\nimport { SourceConnector } from '../../internals/index.js';\nimport { useDragDropManager } from '../useDragDropManager.js';\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js';\nexport function useDragSourceConnector(dragSourceOptions, dragPreviewOptions) {\n    const manager = useDragDropManager();\n    const connector = useMemo(()=>new SourceConnector(manager.getBackend())\n    , [\n        manager\n    ]);\n    useIsomorphicLayoutEffect(()=>{\n        connector.dragSourceOptions = dragSourceOptions || null;\n        connector.reconnect();\n        return ()=>connector.disconnectDragSource()\n        ;\n    }, [\n        connector,\n        dragSourceOptions\n    ]);\n    useIsomorphicLayoutEffect(()=>{\n        connector.dragPreviewOptions = dragPreviewOptions || null;\n        connector.reconnect();\n        return ()=>connector.disconnectDragPreview()\n        ;\n    }, [\n        connector,\n        dragPreviewOptions\n    ]);\n    return connector;\n}\n\n//# sourceMappingURL=useDragSourceConnector.js.map","import { registerSource } from '../../internals/index.js';\nimport { useDragDropManager } from '../useDragDropManager.js';\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js';\nimport { useDragSource } from './useDragSource.js';\nimport { useDragType } from './useDragType.js';\nexport function useRegisteredDragSource(spec, monitor, connector) {\n    const manager = useDragDropManager();\n    const handler = useDragSource(spec, monitor, connector);\n    const itemType = useDragType(spec);\n    useIsomorphicLayoutEffect(function registerDragSource() {\n        if (itemType != null) {\n            const [handlerId, unregister] = registerSource(itemType, handler, manager);\n            monitor.receiveHandlerId(handlerId);\n            connector.receiveHandlerId(handlerId);\n            return unregister;\n        }\n        return;\n    }, [\n        manager,\n        monitor,\n        connector,\n        handler,\n        itemType\n    ]);\n}\n\n//# sourceMappingURL=useRegisteredDragSource.js.map","import { useEffect, useMemo } from 'react';\nimport { DragSourceImpl } from './DragSourceImpl.js';\nexport function useDragSource(spec, monitor, connector) {\n    const handler = useMemo(()=>new DragSourceImpl(spec, monitor, connector)\n    , [\n        monitor,\n        connector\n    ]);\n    useEffect(()=>{\n        handler.spec = spec;\n    }, [\n        spec\n    ]);\n    return handler;\n}\n\n//# sourceMappingURL=useDragSource.js.map","import { invariant } from '@react-dnd/invariant';\nimport { useMemo } from 'react';\nexport function useDragType(spec) {\n    return useMemo(()=>{\n        const result = spec.type;\n        invariant(result != null, 'spec.type must be defined');\n        return result;\n    }, [\n        spec\n    ]);\n}\n\n//# sourceMappingURL=useDragType.js.map","export function isRef(obj) {\n    return(// eslint-disable-next-line no-prototype-builtins\n    obj !== null && typeof obj === 'object' && Object.prototype.hasOwnProperty.call(obj, 'current'));\n}\n\n//# sourceMappingURL=isRef.js.map","// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n/* globals self */ const scope = typeof global !== 'undefined' ? global : self;\nconst BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\nexport function makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        const timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        const intervalHandle = setInterval(handleTimer, 50);\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nexport function makeRequestCallFromMutationObserver(callback) {\n    let toggle = 1;\n    const observer = new BrowserMutationObserver(callback);\n    const node = document.createTextNode('');\n    observer.observe(node, {\n        characterData: true\n    });\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\nexport const makeRequestCall = typeof BrowserMutationObserver === 'function' ? // reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nmakeRequestCallFromMutationObserver : // task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\nmakeRequestCallFromTimer;\n\n//# sourceMappingURL=makeRequestCall.js.map","// `call`, just like a function.\nexport class RawTask {\n    call() {\n        try {\n            this.task && this.task();\n        } catch (error) {\n            this.onError(error);\n        } finally{\n            this.task = null;\n            this.release(this);\n        }\n    }\n    constructor(onError, release){\n        this.onError = onError;\n        this.release = release;\n        this.task = null;\n    }\n}\n\n//# sourceMappingURL=RawTask.js.map","import { AsapQueue } from './AsapQueue.js';\nimport { TaskFactory } from './TaskFactory.js';\nconst asapQueue = new AsapQueue();\nconst taskFactory = new TaskFactory(asapQueue.registerPendingError);\n/**\n * Calls a task as soon as possible after returning, in its own event, with priority\n * over other events like animation, reflow, and repaint. An error thrown from an\n * event will not interrupt, nor even substantially slow down the processing of\n * other events, but will be rather postponed to a lower priority event.\n * @param {{call}} task A callable object, typically a function that takes no\n * arguments.\n */ export function asap(task) {\n    asapQueue.enqueueTask(taskFactory.create(task));\n}\n\n//# sourceMappingURL=asap.js.map","/* eslint-disable no-restricted-globals, @typescript-eslint/ban-ts-comment, @typescript-eslint/no-unused-vars, @typescript-eslint/no-non-null-assertion */ import { makeRequestCall, makeRequestCallFromTimer } from './makeRequestCall.js';\nexport class AsapQueue {\n    // Use the fastest means possible to execute a task in its own turn, with\n    // priority over other events including IO, animation, reflow, and redraw\n    // events in browsers.\n    //\n    // An exception thrown by a task will permanently interrupt the processing of\n    // subsequent tasks. The higher level `asap` function ensures that if an\n    // exception is thrown by a task, that the task queue will continue flushing as\n    // soon as possible, but if you use `rawAsap` directly, you are responsible to\n    // either ensure that no exceptions are thrown from your task, or to manually\n    // call `rawAsap.requestFlush` if an exception is thrown.\n    enqueueTask(task) {\n        const { queue: q , requestFlush  } = this;\n        if (!q.length) {\n            requestFlush();\n            this.flushing = true;\n        }\n        // Equivalent to push, but avoids a function call.\n        q[q.length] = task;\n    }\n    constructor(){\n        this.queue = [];\n        // We queue errors to ensure they are thrown in right order (FIFO).\n        // Array-as-queue is good enough here, since we are just dealing with exceptions.\n        this.pendingErrors = [];\n        // Once a flush has been requested, no further calls to `requestFlush` are\n        // necessary until the next `flush` completes.\n        // @ts-ignore\n        this.flushing = false;\n        // The position of the next task to execute in the task queue. This is\n        // preserved between calls to `flush` so that it can be resumed if\n        // a task throws an exception.\n        this.index = 0;\n        // If a task schedules additional tasks recursively, the task queue can grow\n        // unbounded. To prevent memory exhaustion, the task queue will periodically\n        // truncate already-completed tasks.\n        this.capacity = 1024;\n        // The flush function processes all tasks that have been scheduled with\n        // `rawAsap` unless and until one of those tasks throws an exception.\n        // If a task throws an exception, `flush` ensures that its state will remain\n        // consistent and will resume where it left off when called again.\n        // However, `flush` does not make any arrangements to be called again if an\n        // exception is thrown.\n        this.flush = ()=>{\n            const { queue: q  } = this;\n            while(this.index < q.length){\n                const currentIndex = this.index;\n                // Advance the index before calling the task. This ensures that we will\n                // begin flushing on the next task the task throws an error.\n                this.index++;\n                q[currentIndex].call();\n                // Prevent leaking memory for long chains of recursive calls to `asap`.\n                // If we call `asap` within tasks scheduled by `asap`, the queue will\n                // grow, but to avoid an O(n) walk for every task we execute, we don't\n                // shift tasks off the queue after they have been executed.\n                // Instead, we periodically shift 1024 tasks off the queue.\n                if (this.index > this.capacity) {\n                    // Manually shift all values starting at the index back to the\n                    // beginning of the queue.\n                    for(let scan = 0, newLength = q.length - this.index; scan < newLength; scan++){\n                        q[scan] = q[scan + this.index];\n                    }\n                    q.length -= this.index;\n                    this.index = 0;\n                }\n            }\n            q.length = 0;\n            this.index = 0;\n            this.flushing = false;\n        };\n        // In a web browser, exceptions are not fatal. However, to avoid\n        // slowing down the queue of pending tasks, we rethrow the error in a\n        // lower priority turn.\n        this.registerPendingError = (err)=>{\n            this.pendingErrors.push(err);\n            this.requestErrorThrow();\n        };\n        // `requestFlush` requests that the high priority event queue be flushed as\n        // soon as possible.\n        // This is useful to prevent an error thrown in a task from stalling the event\n        // queue if the exception handled by Node.js’s\n        // `process.on(\"uncaughtException\")` or by a domain.\n        // `requestFlush` is implemented using a strategy based on data collected from\n        // every available SauceLabs Selenium web driver worker at time of writing.\n        // https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n        this.requestFlush = makeRequestCall(this.flush);\n        this.requestErrorThrow = makeRequestCallFromTimer(()=>{\n            // Throw first error\n            if (this.pendingErrors.length) {\n                throw this.pendingErrors.shift();\n            }\n        });\n    }\n} // The message channel technique was discovered by Malte Ubl and was the\n // original foundation for this library.\n // http://www.nonblocking.io/2011/06/windownexttick.html\n // Safari 6.0.5 (at least) intermittently fails to create message ports on a\n // page's first load. Thankfully, this version of Safari supports\n // MutationObservers, so we don't need to fall back in that case.\n // function makeRequestCallFromMessageChannel(callback) {\n //     var channel = new MessageChannel();\n //     channel.port1.onmessage = callback;\n //     return function requestCall() {\n //         channel.port2.postMessage(0);\n //     };\n // }\n // For reasons explained above, we are also unable to use `setImmediate`\n // under any circumstances.\n // Even if we were, there is another bug in Internet Explorer 10.\n // It is not sufficient to assign `setImmediate` to `requestFlush` because\n // `setImmediate` must be called *by name* and therefore must be wrapped in a\n // closure.\n // Never forget.\n // function makeRequestCallFromSetImmediate(callback) {\n //     return function requestCall() {\n //         setImmediate(callback);\n //     };\n // }\n // Safari 6.0 has a problem where timers will get lost while the user is\n // scrolling. This problem does not impact ASAP because Safari 6.0 supports\n // mutation observers, so that implementation is used instead.\n // However, if we ever elect to use timers in Safari, the prevalent work-around\n // is to add a scroll event listener that calls for a flush.\n // `setTimeout` does not call the passed callback if the delay is less than\n // approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n // even then.\n // This is for `asap.js` only.\n // Its name will be periodically randomized to break any code that depends on\n // // its existence.\n // rawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer\n // ASAP was originally a nextTick shim included in Q. This was factored out\n // into this ASAP package. It was later adapted to RSVP which made further\n // amendments. These decisions, particularly to marginalize MessageChannel and\n // to capture the MutationObserver implementation in a closure, were integrated\n // back into ASAP proper.\n // https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n//# sourceMappingURL=AsapQueue.js.map","import { RawTask } from './RawTask.js';\nexport class TaskFactory {\n    create(task) {\n        const tasks = this.freeTasks;\n        const t1 = tasks.length ? tasks.pop() : new RawTask(this.onError, (t)=>tasks[tasks.length] = t\n        );\n        t1.task = task;\n        return t1;\n    }\n    constructor(onError){\n        this.onError = onError;\n        this.freeTasks = [];\n    }\n}\n\n//# sourceMappingURL=TaskFactory.js.map","/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */ export function invariant(condition, format, ...args) {\n    if (isProduction()) {\n        if (format === undefined) {\n            throw new Error('invariant requires an error message argument');\n        }\n    }\n    if (!condition) {\n        let error;\n        if (format === undefined) {\n            error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n        } else {\n            let argIndex = 0;\n            error = new Error(format.replace(/%s/g, function() {\n                return args[argIndex++];\n            }));\n            error.name = 'Invariant Violation';\n        }\n        error.framesToPop = 1 // we don't care about invariant's own frame\n        ;\n        throw error;\n    }\n}\nfunction isProduction() {\n    return typeof process !== 'undefined' && process.env['NODE_ENV'] === 'production';\n}\n\n//# sourceMappingURL=index.js.map"],"names":["DndContext","createContext","dragDropManager","undefined","wrapConnectorHooks","hooks","wrappedHooks","Object","keys","forEach","key","hook","endsWith","wrappedHook","elementOrNode","options","isValidElement","node","element","type","displayName","name","Error","throwIfCompositeComponentElement","newRef","previousRef","ref","cloneElement","setRef","cloneWithRef","wrapHookToRecognizeElement","current","shallowEqual","objA","objB","compare","compareContext","compareResult","call","keysA","keysB","length","bHasOwnProperty","prototype","hasOwnProperty","bind","idx","valueA","valueB","useCollectedProps","collector","monitor","connector","collect","onCollect","collected","updateCollected","onUpdate","setCollected","useState","useCallback","nextValue","useIsomorphicLayoutEffect","useCollector","handlerId","getHandlerId","subscribeToStateChange","handlerIds","useMonitorOutput","reconnect","useConnectDropTarget","useMemo","dropTarget","TargetConnector","connectTarget","this","didChange","didHandlerIdChange","didDropTargetChange","didOptionsChange","disconnectDropTarget","lastConnectedHandlerId","lastConnectedDropTarget","lastConnectedDropTargetOptions","dropTargetOptions","unsubscribeDropTarget","backend","connectDropTarget","receiveHandlerId","newHandlerId","dropTargetOptionsInternal","dropTargetNode","dropTargetRef","clearDropTarget","constructor","isRef","i","isCallingCanDrop","DropTargetMonitorImpl","targetId","listener","internalMonitor","canDrop","canDropOnTarget","isOver","isOverTarget","getItemType","getItem","getDropResult","didDrop","getInitialClientOffset","getInitialSourceClientOffset","getSourceClientOffset","getClientOffset","getDifferenceFromInitialOffset","manager","getMonitor","DropTargetImpl","spec","hover","drop","useDrop","specArg","deps","useOptionalFactory","useDragDropManager","u","useDropTargetMonitor","getBackend","useDropTargetConnector","useEffect","useDropTarget","accept","Array","isArray","useAccept","unregister","map","a","toString","join","useRegisteredDropTarget","registerTarget","target","registry","getRegistry","addTarget","removeTarget","registerSource","source","sourceId","addSource","removeSource","useContext","window","useLayoutEffect","arg","memoDeps","push","refCount","INSTANCE_SYM","Symbol","for","DndProvider","memo","_param","children","props","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_objectWithoutProperties","isGlobalInstance","context","getGlobalContext","debugMode","ctx","createSingletonDndContext","getDndContextValue","Provider","value","global","useConnectDragSource","dragSource","useConnectDragPreview","dragPreview","SourceConnector","dragSourceOptions","dragSourceOptionsInternal","dragPreviewOptions","dragPreviewOptionsInternal","reconnectDragSource","reconnectDragPreview","didConnectedDragSourceChange","didDragSourceOptionsChange","disconnectDragSource","lastConnectedDragSource","lastConnectedDragSourceOptions","dragSourceUnsubscribe","connectDragSource","forceDidChange","didConnectedDragPreviewChange","didDragPreviewOptionsChange","disconnectDragPreview","lastConnectedDragPreview","lastConnectedDragPreviewOptions","dragPreviewUnsubscribe","connectDragPreview","dragPreviewNode","dragPreviewRef","dragSourceNode","dragSourceRef","clearDragSource","clearDragPreview","isCallingCanDrag","isCallingIsDragging","DragSourceMonitorImpl","canDrag","canDragSource","isDragging","isDraggingSource","getTargetIds","isSourcePublic","getSourceId","subscribeToOffsetChange","DragSourceImpl","beginDrag","result","item","globalMonitor","endDrag","end","useDrag","begin","useDragSourceMonitor","useDragSourceConnector","previewOptions","handler","useDragSource","itemType","useDragType","useRegisteredDragSource","obj","scope","self","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","makeRequestCallFromTimer","callback","timeoutHandle","setTimeout","handleTimer","intervalHandle","setInterval","clearTimeout","clearInterval","makeRequestCall","toggle","observer","document","createTextNode","observe","characterData","data","RawTask","task","error","onError","release","asapQueue","enqueueTask","queue","q","requestFlush","flushing","pendingErrors","index","capacity","flush","currentIndex","scan","newLength","registerPendingError","err","requestErrorThrow","shift","taskFactory","create","tasks","freeTasks","t1","pop","t","asap","invariant","condition","format","args","process","argIndex","replace","framesToPop"],"sourceRoot":""}